### 布隆过滤器
布隆过滤器是一个集合的概念，常应用于爬虫项目或黑名单项目的一个结构，它是为了查询某个数据是否在一个集合中的结果。
例如有一亿个黑名单url，每个url有64个字节，虽然可以将其装到hashtable中来确定数据项是否存在，然后这太耗内存了，是不可取的。

- 大数组结构
    数组中的每个位置都是一个比特，例如：
    int[] array = new int[100];

    定义了一个100长度的int型数组，每个数据项都是32位的int型，以二进制的方式来看，
    array[0]代表0-31位，array[1]代表32-63位，以此类推，100长度的int型数组可以代表100*32位个信息。

    默认所有位都是0的，在对某个位进行操作时，例如要对3120位操作将其改为1，
    由于每个数据项是32位的，所以先找出在哪个数据项，将3120/32可以得到要操作的数据项，
    在得到要操作的数据项后，只需要将3120%32算出要操作的位数，通过位运算将其赋值为1即可。

布隆过滤器就是比特类型的数组，一个位的数不是0就是1，假设这个数组最低位是0，最高位是m-1，长度是m，
长度是m的bit位数组，大小是m/8个字节。

添加一个url
在有这个数组后，添加一个url时，准备k个哈希函数，分别是h1-hk，url经过k个哈希函数计算后会得到v1-vh个哈希值，
将v1-vh个哈希值分别%m，计算出来的k个值会在0至m-1之间，只需要相应的k个位改为1即可。

验证一个url
将url经过k个哈希函数计算并模以m，查看k个值对应的位是否为1，只要有1个值对应的位不为1，那么就认为非重复，相反则重复。

概率



### 一致性哈希